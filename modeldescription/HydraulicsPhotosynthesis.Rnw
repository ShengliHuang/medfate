\documentclass[11pt,a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{natbib}
\usepackage{authblk}
\usepackage{graphicx}
\usepackage{hyperref}

%\VignetteIndexEntry{Hydraulics, stomatal conductance and photosynthesis}
%\VignettePackage{medfate}

\title{Hydraulics, stomatal conductance and photosynthesis}
\author[1,2]{Miquel De Cáceres}
\author[1]{Víctor Granda}
\affil[1]{Centre de Ciència i Tecnologia Forestal de Catalunya. Ctra. St. Llorenç de Morunys km 2, 25280, Solsona, Catalonia, Spain}
\affil[2]{CREAF, Cerdanyola del Vallès, 08193, Spain}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle
\tableofcontents



\section{Introduction}


In Sperry and Love (2015) and Sperry et al (2016a) stomatal regulation is modelled from purely hydraulic grounds. This approach ignores the role of stomata in regulating and responding to photosynthesis (i.e., there is no trade-off between water losses and carbon acquisition). Sperry et al (2016b) recently presented a cost-benefit approach where the hydraulic costs of opening the stomata (vulnerability to cavitation) are compared against photosynthetic gain. The complex soil water balance model of \texttt{medfate} implements this second stomatal regulation approach using descriptions of the continuum in a network as described above. 

This document describes the design decisions taken to implement Sperry and Love (2015) supply functions and Sperry et al (2016a) stomatal regulation model in \texttt{medfate}, including details on how supply functions are calculated from vulnerability curves, the need to separate sunlit and shade leaves to scale photosynthesis and cost-benefit maximization to the plant level. We also include explanations regarding how plant water compartments are used to modulate transpiration and, more generally, how plant dessication is dealt with (Martin-StPaul et al. 2017). 









\section{Photosynthesis and stomatal regulation}





\subsubsection{Crown photosynthesis}
In the previous subsection we calculated photosynthesis at the leaf level. However, the function $A(\Psi_{leaf})$ can be calculated for a whole crown. Essentially we need to repeat the calculations of leaf temperature, leaf VPD, leaf gas conductance and photosynthesis for every leaf to be considered in the crown. Gross and net photosynthesis values can be then aggregated across the crown for each value of $\Psi_{leaf}$, so that the function $A(\Psi_{leaf})$ is obtained. Here we will consider a crown of one species divided into 10 layers, with constant leaf density:
<<>>=
LAI = 2
nlayer = 10
LAIlayerlive = matrix(rep(LAI/nlayer,nlayer),nlayer,1)
LAIlayermax = matrix(rep(LAI/nlayer,nlayer),nlayer,1)
LAIlayerdead = matrix(0,nlayer,1)
kb = 0.8
kd_PAR = 0.5
kd_SWR = kd_PAR/1.35
alpha_PAR = 0.9
gamma_PAR = 0.04
gamma_SWR = 0.05
alpha_SWR = 0.7
@
Many aspects may vary across the crown, including environmental conditions (such as direct/diffuse light or wind speed) and photosynthesis parameters (e.g. Vmax298). The previous crown definition and light parameters lead to a percentage of the above-canopy irradiance reaching each layer (Goudriaan 2016; Anten and Bastiaans 2016). Furthermore, it is generally accepted that sunlit and shade leaves need to be treated separately (De Pury and Farquhar 1997).Extinction of direct radiation also defines the proportion of leaves of each layer that are affected by direct light beams (i.e. the proportion of sunlit leaves).

\begin{center}
<<fig = TRUE, echo=FALSE, width=7, height=4>>=
Ibfpar = light_layerIrradianceFraction(LAIlayerlive,LAIlayerdead,LAIlayermax, kb, alpha_PAR)
Idfpar = light_layerIrradianceFraction(LAIlayerlive,LAIlayerdead,LAIlayermax, kd_PAR, alpha_PAR)
Ibfswr = light_layerIrradianceFraction(LAIlayerlive,LAIlayerdead,LAIlayermax, kb, alpha_SWR)
Idfswr = light_layerIrradianceFraction(LAIlayerlive,LAIlayerdead,LAIlayermax, kd_SWR, alpha_SWR)
fsunlit = light_layerSunlitFraction(LAIlayerlive, LAIlayerdead, kb)
SHarea = (1-fsunlit)*LAIlayerlive[,1] 
SLarea = fsunlit*LAIlayerlive[,1] 

par(mar=c(4,4,1,1), mfrow=c(1,2))
plot(Ibfpar*100, 1:nlayer,type="l", ylab="Layer", xlab="Percentage of irradiance", xlim=c(0,100), ylim=c(1,nlayer), col="dark green")
lines(Idfpar*100, 1:nlayer, col="dark green", lty=2)
lines(Ibfswr*100, 1:nlayer, col="red")
lines(Idfswr*100, 1:nlayer, col="red", lty=2)

plot(fsunlit*100, 1:nlayer,type="l", ylab="Layer", xlab="Percentage of leaves", xlim=c(0,100), ylim=c(1,nlayer))
lines((1-fsunlit)*100, 1:nlayer, lty=2)
@
\end{center}
 For simplicity, here we will assume constant windspeed in all layers:
<<>>=
ulayer = rep(2, 10)
@
Regarding incoming light, we assume the following direct and diffuse irradiance at the top of the canopy:
<<>>=
solarElevation = 0.67
SWR_direct = 1100
SWR_diffuse = 300
PAR_direct = 550
PAR_diffuse = 150
@
Solar elevation is the angle between the sun and the horizon (i.e. the complement of the zenith angle). Under these conditions, the amount of shortwave and PAR radiation absorbed per unit of leaf area at each canopy layer is (Anten and Bastiaans 2016):
\begin{center}
<<echo=FALSE, fig=TRUE, width=7, height=4>>=
abs_PAR = light_cohortSunlitShadeAbsorbedRadiation(PAR_direct, PAR_diffuse,
                                             Ibfpar, Idfpar, beta = solarElevation, 
                                             LAIlayerlive, LAIlayerdead, kb, kd_PAR, alpha_PAR, gamma_PAR)
abs_SWR = light_cohortSunlitShadeAbsorbedRadiation(SWR_direct, SWR_diffuse,
                                             Ibfswr, Idfswr, beta = solarElevation, 
                                             LAIlayerlive, LAIlayerdead, kb, kd_SWR, alpha_SWR, gamma_SWR)
par(mar=c(4,4,1,1), mfrow=c(1,2))
absRadSL = abs_SWR$I_sunlit[,1]
absRadSH = abs_SWR$I_shade[,1]
lambda = 546.6507
QSL = abs_PAR$I_sunlit[,1]*lambda*0.836*0.01
QSH = abs_PAR$I_shade[,1]*lambda*0.836*0.01
plot(QSL, 1:nlayer,type="l", ylab="Layer", xlab="Absorbed PAR quantum flux per leaf area", ylim=c(1,nlayer), col="dark green", xlim=c(0,max(QSL)))
lines(QSH, 1:nlayer, col="dark green", lty=2)
plot(absRadSL, 1:nlayer,type="l", ylab="Layer", xlab="Absorbed SWR per leaf area (W/m2)", ylim=c(1,nlayer), col="red", xlim=c(0,max(absRadSL)))
lines(absRadSH, 1:nlayer, col="red", lty=2)
@
\end{center}
Following De Pury and Farquhar (1997), we further assume that maximum assimilation rates are highest for leaves at the top of the canopy and there is a exponential decrease from there towards the bottom, where maximum rates are 50\% of those at the top: 
\begin{equation}
V_{max,298}(L_i) =V_{max,298}\cdot exp(-0.713\cdot L_i/LAIc)   
\end{equation}
where $L_i$ is the cumulative LAI value at a given canopy layer $i$ and $LAIc$ is the canopy LAI.
<<echo=FALSE>>==
kn = 0.713 #~50% decrease from top to bottom of the canopy
Vmax298layer = numeric(nlayer)
s = 0
for(i in nlayer:1) {
  Vmax298layer[i]=Vmax298*1.5*exp(-kn*(s+LAIlayerlive[i,1]/2)/sum(LAIlayerlive[,1]))
  s =s+LAIlayerlive[i,1]
}
Jmax298layer=Vmax298layer*1.67
# plot(Vmax298layer, 1:nlayer,type="l", ylab="Layer", xlab="Maximum carboxylation rate", ylim=c(1,nlayer), col="red")
@

Multilayer canopy models allow evaluating leaf conditions, stomatal conductance and photosynthesis for different points of the canopy. However, this comes at high computational cost. While big-leaf canopy models are known to be unaccurate under some situations, sun-shade canopy models (De Pury and Farquhar 1997) provide estimates that are close to multiple layer models (Hikosaka 2016). Sun-shade models involve: (a) aggregating the leaf area of sunlit/shade leaves across layers; (b) aggregating the light absorbed by leaves of each kind across layers; and (c) aggregating maximum assimilation rates across layers, again separating sunlit and shade leaves. One then calls the photosynthesis model twice (i.e. once for shade leaves and once for sunlit leaves), using the aggregated maximum assimilation rates. Separating the two kinds of leaves acknowledges that they operate at different parts of the light-saturation curve. The following figure provides the canopy photosynthesis functions obtained, under different situations, using a full 10-layer canopy description (top), a sunshade canopy model (center) or a big-leaf model (bottom). These were generated using functions \texttt{photo\_multilayerPhotosynthesisFunction()}, \texttt{photo\_sunshadePhotosynthesisFunction()} and \texttt{photo\_leafPhotosynthesisFunction()}, respectively. Note the coincidence between the multi-layer and the sun-shade models.
<<echo=FALSE>>=
psi2A11can = photo_multilayerPhotosynthesisFunction(supplyNetwork11$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A12can = photo_multilayerPhotosynthesisFunction(supplyNetwork12$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A13can = photo_multilayerPhotosynthesisFunction(supplyNetwork13$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A14can = photo_multilayerPhotosynthesisFunction(supplyNetwork14$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A21can = photo_multilayerPhotosynthesisFunction(supplyNetwork21$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A22can = photo_multilayerPhotosynthesisFunction(supplyNetwork22$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A23can = photo_multilayerPhotosynthesisFunction(supplyNetwork23$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A24can = photo_multilayerPhotosynthesisFunction(supplyNetwork24$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A31can = photo_multilayerPhotosynthesisFunction(supplyNetwork31$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A32can = photo_multilayerPhotosynthesisFunction(supplyNetwork32$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A33can = photo_multilayerPhotosynthesisFunction(supplyNetwork33$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A34can = photo_multilayerPhotosynthesisFunction(supplyNetwork34$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)

psi2A11canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork11emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A12canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork12emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A13canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork13emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A14canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork14emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A21canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork21emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A22canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork22emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A23canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork23emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A24canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork24emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A31canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork31emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A32canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork32emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A33canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork33emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)
psi2A34canemb = photo_multilayerPhotosynthesisFunction(supplyNetwork34emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298layer, Jmax298layer, Gmin, Gmax)


SLarea = sum(SLarea)
SHarea = sum(SHarea)
QSL = sum(QSL*LAIlayerlive[,1]*fsunlit)
QSH = sum(QSH*LAIlayerlive[,1]*(1-fsunlit))
absRadSL = sum(absRadSL*LAIlayerlive[,1]*fsunlit)
absRadSH = sum(absRadSH*LAIlayerlive[,1]*(1-fsunlit))
Vmax298SL= sum(Vmax298layer*LAIlayerlive[,1]*fsunlit)
Jmax298SL = sum(Jmax298layer*LAIlayerlive[,1]*fsunlit)
Vmax298SH= sum(Vmax298layer*LAIlayerlive[,1]*(1-fsunlit))
Jmax298SH = sum(Jmax298layer*LAIlayerlive[,1]*(1-fsunlit))
ulayer = ulayer[1]

psi2A11ss = photo_sunshadePhotosynthesisFunction(supplyNetwork11$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A12ss = photo_sunshadePhotosynthesisFunction(supplyNetwork12$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A13ss = photo_sunshadePhotosynthesisFunction(supplyNetwork13$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A14ss = photo_sunshadePhotosynthesisFunction(supplyNetwork14$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A21ss = photo_sunshadePhotosynthesisFunction(supplyNetwork21$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A22ss = photo_sunshadePhotosynthesisFunction(supplyNetwork22$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A23ss = photo_sunshadePhotosynthesisFunction(supplyNetwork23$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A24ss = photo_sunshadePhotosynthesisFunction(supplyNetwork24$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A31ss = photo_sunshadePhotosynthesisFunction(supplyNetwork31$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A32ss = photo_sunshadePhotosynthesisFunction(supplyNetwork32$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A33ss = photo_sunshadePhotosynthesisFunction(supplyNetwork33$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A34ss = photo_sunshadePhotosynthesisFunction(supplyNetwork34$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A11ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork11emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A12ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork12emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A13ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork13emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A14ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork14emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A21ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork21emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A22ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork22emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A23ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork23emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A24ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork24emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A31ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork31emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A32ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork32emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A33ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork33emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)
psi2A34ssemb = photo_sunshadePhotosynthesisFunction(supplyNetwork34emb$E,Catm, Patm,Tcan, vpa, 
                                                SLarea, SHarea, ulayer, 
                                                absRadSL, absRadSH, QSL, QSH,
                                                Vmax298SL, Vmax298SH, Jmax298SL, Jmax298SH, Gmin, Gmax)

BLarea = SLarea+SHarea
QBL = QSL+QSH
absRadBL = absRadSL+absRadSH
Vmax298BL = Vmax298SL + Vmax298SH
Jmax298BL = Jmax298SL + Jmax298SH
Gmax = 2.0
psi2A11bl = photo_leafPhotosynthesisFunction(supplyNetwork11$E,Catm, Patm,Tcan, vpa, ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A12bl = photo_leafPhotosynthesisFunction(supplyNetwork12$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A13bl = photo_leafPhotosynthesisFunction(supplyNetwork13$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A14bl = photo_leafPhotosynthesisFunction(supplyNetwork14$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A21bl = photo_leafPhotosynthesisFunction(supplyNetwork21$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A22bl = photo_leafPhotosynthesisFunction(supplyNetwork22$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A23bl = photo_leafPhotosynthesisFunction(supplyNetwork23$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A24bl = photo_leafPhotosynthesisFunction(supplyNetwork24$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A31bl = photo_leafPhotosynthesisFunction(supplyNetwork31$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A32bl = photo_leafPhotosynthesisFunction(supplyNetwork32$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A33bl = photo_leafPhotosynthesisFunction(supplyNetwork33$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A34bl = photo_leafPhotosynthesisFunction(supplyNetwork34$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)

psi2A11blemb = photo_leafPhotosynthesisFunction(supplyNetwork11emb$E,Catm, Patm,Tcan, vpa, ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A12blemb = photo_leafPhotosynthesisFunction(supplyNetwork12emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A13blemb = photo_leafPhotosynthesisFunction(supplyNetwork13emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A14blemb = photo_leafPhotosynthesisFunction(supplyNetwork14emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A21blemb = photo_leafPhotosynthesisFunction(supplyNetwork21emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A22blemb = photo_leafPhotosynthesisFunction(supplyNetwork22emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A23blemb = photo_leafPhotosynthesisFunction(supplyNetwork23emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A24blemb = photo_leafPhotosynthesisFunction(supplyNetwork24emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A31blemb = photo_leafPhotosynthesisFunction(supplyNetwork31emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A32blemb = photo_leafPhotosynthesisFunction(supplyNetwork32emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A33blemb = photo_leafPhotosynthesisFunction(supplyNetwork33emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
psi2A34blemb = photo_leafPhotosynthesisFunction(supplyNetwork34emb$E,Catm, Patm,Tcan, vpa,  ulayer,
                                             absRadBL,QBL,Vmax298BL, Jmax298BL, Gmin, Gmax, 1.0, BLarea)
Gmax = 0.5
@
\begin{center}
<<fig=TRUE, width=7, height=10, echo=FALSE>>==
par(mar=c(4,4,2,1), mfrow=c(3,2))
plot(-supplyNetwork11$psiLeaf, psi2A11can$Photosynthesis, type="l", col=col1, ylab="Multilayer photosynthesis", xlab = "Leaf pressure (-MPa)",  xlim=c(0, 7), lwd=1, main="original")
lines(-supplyNetwork12$psiLeaf,psi2A12can$Photosynthesis, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13$psiLeaf, psi2A13can$Photosynthesis, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14$psiLeaf, psi2A14can$Photosynthesis, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21$psiLeaf, psi2A21can$Photosynthesis, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22$psiLeaf, psi2A22can$Photosynthesis, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23$psiLeaf, psi2A23can$Photosynthesis, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24$psiLeaf, psi2A24can$Photosynthesis, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31$psiLeaf, psi2A31can$Photosynthesis, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32$psiLeaf, psi2A32can$Photosynthesis, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33$psiLeaf, psi2A33can$Photosynthesis, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34$psiLeaf, psi2A34can$Photosynthesis, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11emb$psiLeaf, psi2A11canemb$Photosynthesis, type="l", col=col1, ylab="Multilayer photosynthesis", xlab = "Leaf pressure (-MPa)",  xlim=c(0, 7), lwd=1, main="after cavitation")
lines(-supplyNetwork12emb$psiLeaf,psi2A12canemb$Photosynthesis, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13emb$psiLeaf, psi2A13canemb$Photosynthesis, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14emb$psiLeaf, psi2A14canemb$Photosynthesis, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21emb$psiLeaf, psi2A21canemb$Photosynthesis, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22emb$psiLeaf, psi2A22canemb$Photosynthesis, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23emb$psiLeaf, psi2A23canemb$Photosynthesis, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24emb$psiLeaf, psi2A24canemb$Photosynthesis, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31emb$psiLeaf, psi2A31canemb$Photosynthesis, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32emb$psiLeaf, psi2A32canemb$Photosynthesis, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33emb$psiLeaf, psi2A33canemb$Photosynthesis, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34emb$psiLeaf, psi2A34canemb$Photosynthesis, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11$psiLeaf, psi2A11ss$Photosynthesis, type="l", col=col1, ylab="Sun-shade photosynthesis", xlab = "Leaf pressure (-MPa)",  xlim=c(0, 7), lwd=1, main="original")
lines(-supplyNetwork12$psiLeaf,psi2A12ss$Photosynthesis, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13$psiLeaf, psi2A13ss$Photosynthesis, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14$psiLeaf, psi2A14ss$Photosynthesis, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21$psiLeaf, psi2A21ss$Photosynthesis, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22$psiLeaf, psi2A22ss$Photosynthesis, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23$psiLeaf, psi2A23ss$Photosynthesis, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24$psiLeaf, psi2A24ss$Photosynthesis, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31$psiLeaf, psi2A31ss$Photosynthesis, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32$psiLeaf, psi2A32ss$Photosynthesis, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33$psiLeaf, psi2A33ss$Photosynthesis, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34$psiLeaf, psi2A34ss$Photosynthesis, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11emb$psiLeaf, psi2A11ssemb$Photosynthesis, type="l", col=col1, ylab="Sun-shade photosynthesis", xlab = "Leaf pressure (-MPa)",  xlim=c(0, 7), lwd=1, main="after cavitation")
lines(-supplyNetwork12emb$psiLeaf,psi2A12ssemb$Photosynthesis, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13emb$psiLeaf, psi2A13ssemb$Photosynthesis, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14emb$psiLeaf, psi2A14ssemb$Photosynthesis, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21emb$psiLeaf, psi2A21ssemb$Photosynthesis, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22emb$psiLeaf, psi2A22ssemb$Photosynthesis, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23emb$psiLeaf, psi2A23ssemb$Photosynthesis, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24emb$psiLeaf, psi2A24ssemb$Photosynthesis, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31emb$psiLeaf, psi2A31ssemb$Photosynthesis, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32emb$psiLeaf, psi2A32ssemb$Photosynthesis, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33emb$psiLeaf, psi2A33ssemb$Photosynthesis, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34emb$psiLeaf, psi2A34ssemb$Photosynthesis, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11$psiLeaf, psi2A11bl$Photosynthesis, type="l", col=col1, ylab="Big-leaf photosynthesis", xlab = "Leaf pressure (-MPa)",  xlim=c(0, 7), lwd=1, main="original")
lines(-supplyNetwork12$psiLeaf,psi2A12bl$Photosynthesis, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13$psiLeaf, psi2A13bl$Photosynthesis, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14$psiLeaf, psi2A14bl$Photosynthesis, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21$psiLeaf, psi2A21bl$Photosynthesis, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22$psiLeaf, psi2A22bl$Photosynthesis, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23$psiLeaf, psi2A23bl$Photosynthesis, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24$psiLeaf, psi2A24bl$Photosynthesis, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31$psiLeaf, psi2A31bl$Photosynthesis, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32$psiLeaf, psi2A32bl$Photosynthesis, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33$psiLeaf, psi2A33bl$Photosynthesis, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34$psiLeaf, psi2A34bl$Photosynthesis, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11emb$psiLeaf, psi2A11blemb$Photosynthesis, type="l", col=col1, ylab="Big-leaf photosynthesis", xlab = "Leaf pressure (-MPa)",  xlim=c(0, 7), lwd=1, main="after cavitation")
lines(-supplyNetwork12emb$psiLeaf,psi2A12blemb$Photosynthesis, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13emb$psiLeaf, psi2A13blemb$Photosynthesis, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14emb$psiLeaf, psi2A14blemb$Photosynthesis, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21emb$psiLeaf, psi2A21blemb$Photosynthesis, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22emb$psiLeaf, psi2A22blemb$Photosynthesis, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23emb$psiLeaf, psi2A23blemb$Photosynthesis, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24emb$psiLeaf, psi2A24blemb$Photosynthesis, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31emb$psiLeaf, psi2A31blemb$Photosynthesis, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32emb$psiLeaf, psi2A32blemb$Photosynthesis, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33emb$psiLeaf, psi2A33blemb$Photosynthesis, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34emb$psiLeaf, psi2A34blemb$Photosynthesis, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

@
\end{center}

\subsection{Stomatal regulation}
Sperry et al (2016b) presented a cost-benefit approach where hydraulic costs of opening the stomata are compared against photosynthetic gain. Details of their approach, and two suggested variants, a given in the next two subsections. The final subsection explains how to scale stomatal regulation (and hence, transpiration and photosynthesis) from leaf to plant.

 \subsubsection{Cost and gain functions}
The hydraulic supply function is used to derive a transpirational \emph{cost function} $\theta_1(\Psi_{leaf})$ that reflects the increasing damage from cavitation and the greater difficulty of moving water along the continuum (Sperry et al. 2016b):
\begin{equation}
\theta_1(\Psi_{leaf}) = \frac{k_{c,max}-k_{c}(\Psi_{leaf})}{k_{c,max}-k_{crit}}
\end{equation}
where $k_c(\Psi_{leaf}) = dE/d\Psi(\Psi_{leaf})$ is the slope of the supply function, $k_{c,max} = dE/d\Psi(\Psi_{soil})$ and $k_{crit} = dE/d\Psi(\Psi_{crit})$ is the slope of the supply function at $E = E_{crit}$ the critical flow beyond which hydraulic failure occurs. 

Alternatively, we considered a second cost function ($\theta_2(\Psi_{leaf})$) using the vulnerability curve of the leaf:
\begin{eqnarray}
\theta_2(\Psi_{leaf}) &=& \frac{k_{l, max}-k_l(\Psi_{leaf})}{k_{l,max} - k_{l,min}}\\
\end{eqnarray}
where $k_l$ is the leaf conductance function; and $k_{l,min}$ and $k_{l,max}$ are the minimum and maximum leaf conductance values found in the supply function. Using the leaf vulnerability curve for the cost function is grounded on the fact that stomatal regulation occurs at leaves, so that instantaneous regulation should respond to the loss of hydraulic conductance at this point, independently of what happens to the rest of the continuum. Hormonal signals from root to leaf are assumed to regulate stomatal aperture at longer time scales. Obviously, $\theta_2$ is the same before irreversible cavitation. The difference between them may be interpreted as the following. $\theta_2$ strictly follows the potential at the leaf level (and hence could be related to a loss of turgor). 

<<echo=FALSE>>==
PM11 =transp_profitMaximization(supplyNetwork11, psi2A11, type=1, Gmin, Gmax)
PM12 =transp_profitMaximization(supplyNetwork12, psi2A12, type=1, Gmin, Gmax)
PM13 =transp_profitMaximization(supplyNetwork13, psi2A13, type=1, Gmin, Gmax)
PM14 =transp_profitMaximization(supplyNetwork14, psi2A14, type=1, Gmin, Gmax)
PM21 =transp_profitMaximization(supplyNetwork21, psi2A21, type=1, Gmin, Gmax)
PM22 =transp_profitMaximization(supplyNetwork22, psi2A22, type=1, Gmin, Gmax)
PM23 =transp_profitMaximization(supplyNetwork23, psi2A23, type=1, Gmin, Gmax)
PM24 =transp_profitMaximization(supplyNetwork24, psi2A24, type=1, Gmin, Gmax)
PM31 =transp_profitMaximization(supplyNetwork31, psi2A31, type=1, Gmin, Gmax)
PM32 =transp_profitMaximization(supplyNetwork32, psi2A32, type=1, Gmin, Gmax)
PM33 =transp_profitMaximization(supplyNetwork33, psi2A33, type=1, Gmin, Gmax)
PM34 =transp_profitMaximization(supplyNetwork34, psi2A34, type=1, Gmin, Gmax)

PM11emb =transp_profitMaximization(supplyNetwork11emb, psi2A11emb, type=1, Gmin, Gmax)
PM12emb =transp_profitMaximization(supplyNetwork12emb, psi2A12emb, type=1, Gmin, Gmax)
PM13emb =transp_profitMaximization(supplyNetwork13emb, psi2A13emb, type=1, Gmin, Gmax)
PM14emb =transp_profitMaximization(supplyNetwork14emb, psi2A14emb, type=1, Gmin, Gmax)
PM21emb =transp_profitMaximization(supplyNetwork21emb, psi2A21emb, type=1, Gmin, Gmax)
PM22emb =transp_profitMaximization(supplyNetwork22emb, psi2A22emb, type=1, Gmin, Gmax)
PM23emb =transp_profitMaximization(supplyNetwork23emb, psi2A23emb, type=1, Gmin, Gmax)
PM24emb =transp_profitMaximization(supplyNetwork24emb, psi2A24emb, type=1, Gmin, Gmax)
PM31emb =transp_profitMaximization(supplyNetwork31emb, psi2A31emb, type=1, Gmin, Gmax)
PM32emb =transp_profitMaximization(supplyNetwork32emb, psi2A32emb, type=1, Gmin, Gmax)
PM33emb =transp_profitMaximization(supplyNetwork33emb, psi2A33emb, type=1, Gmin, Gmax)
PM34emb =transp_profitMaximization(supplyNetwork34emb, psi2A34emb, type=1, Gmin, Gmax)

PM11_s2 =transp_profitMaximization(supplyNetwork11, psi2A11, type=2, Gmin, Gmax, kleafmax)
PM12_s2 =transp_profitMaximization(supplyNetwork12, psi2A12,type=2, Gmin, Gmax, kleafmax)
PM13_s2 =transp_profitMaximization(supplyNetwork13, psi2A13, type=2, Gmin, Gmax, kleafmax)
PM14_s2 =transp_profitMaximization(supplyNetwork14, psi2A14,type=2, Gmin, Gmax, kleafmax)
PM21_s2 =transp_profitMaximization(supplyNetwork21, psi2A21,type=2, Gmin, Gmax, kleafmax)
PM22_s2 =transp_profitMaximization(supplyNetwork22, psi2A22,type=2, Gmin, Gmax, kleafmax)
PM23_s2 =transp_profitMaximization(supplyNetwork23, psi2A23,type=2, Gmin, Gmax, kleafmax)
PM24_s2 =transp_profitMaximization(supplyNetwork24, psi2A24,type=2, Gmin, Gmax, kleafmax)
PM31_s2 =transp_profitMaximization(supplyNetwork31, psi2A31, type=2, Gmin, Gmax, kleafmax)
PM32_s2 =transp_profitMaximization(supplyNetwork32, psi2A32,type=2, Gmin, Gmax, kleafmax)
PM33_s2 =transp_profitMaximization(supplyNetwork33, psi2A33, type=2, Gmin, Gmax, kleafmax)
PM34_s2 =transp_profitMaximization(supplyNetwork34, psi2A34, type=2, Gmin, Gmax, kleafmax)

PM11emb_s2 =transp_profitMaximization(supplyNetwork11emb, psi2A11emb, type=2, Gmin, Gmax, kleafmax)
PM12emb_s2 =transp_profitMaximization(supplyNetwork12emb, psi2A12emb, type=2, Gmin, Gmax, kleafmax)
PM13emb_s2 =transp_profitMaximization(supplyNetwork13emb, psi2A13emb, type=2, Gmin, Gmax, kleafmax)
PM14emb_s2 =transp_profitMaximization(supplyNetwork14emb, psi2A14emb, type=2, Gmin, Gmax, kleafmax)
PM21emb_s2 =transp_profitMaximization(supplyNetwork21emb, psi2A21emb, type=2, Gmin, Gmax, kleafmax)
PM22emb_s2 =transp_profitMaximization(supplyNetwork22emb, psi2A22emb, type=2, Gmin, Gmax, kleafmax)
PM23emb_s2 =transp_profitMaximization(supplyNetwork23emb, psi2A23emb, type=2, Gmin, Gmax, kleafmax)
PM24emb_s2 =transp_profitMaximization(supplyNetwork24emb, psi2A24emb, type=2, Gmin, Gmax, kleafmax)
PM31emb_s2 =transp_profitMaximization(supplyNetwork31emb, psi2A31emb, type=2, Gmin, Gmax, kleafmax)
PM32emb_s2 =transp_profitMaximization(supplyNetwork32emb, psi2A32emb, type=2, Gmin, Gmax, kleafmax)
PM33emb_s2 =transp_profitMaximization(supplyNetwork33emb, psi2A33emb, type=2, Gmin, Gmax, kleafmax)
PM34emb_s2 =transp_profitMaximization(supplyNetwork34emb, psi2A34emb, type=2, Gmin, Gmax, kleafmax)
@
The type of cost function can be specified by the user by setting parameter \texttt{hydraulicCostFunction} (see function \texttt{defaultControl()}). The following figures illustrate the $\theta_1$ and $\theta_2$ curves corresponding to the supply functions:
\begin{center}
<<fig=TRUE, width=8, height=8, echo=FALSE>>==
par(mar=c(4,4,3,1), mfrow=c(2,2))
plot(-supplyNetwork11$psiLeaf, PM11$Cost, type="l", col=col1, ylab="Cost function 1", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main = "Cost 1 (original)")
lines(-supplyNetwork12$psiLeaf, PM12$Cost, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13$psiLeaf, PM13$Cost, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14$psiLeaf, PM14$Cost, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21$psiLeaf, PM21$Cost, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22$psiLeaf, PM22$Cost, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23$psiLeaf, PM23$Cost, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24$psiLeaf, PM24$Cost, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31$psiLeaf, PM31$Cost, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32$psiLeaf, PM32$Cost, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33$psiLeaf, PM33$Cost, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34$psiLeaf, PM34$Cost, lty=3, lwd=1, col=col4)
legend("topleft", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11emb$psiLeaf, PM11emb$Cost, type="l", col=col1, ylab="Cost function", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main = "Cost 1 (after cavitation)")
lines(-supplyNetwork12emb$psiLeaf, PM12emb$Cost, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13emb$psiLeaf, PM13emb$Cost, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14emb$psiLeaf, PM14emb$Cost, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21emb$psiLeaf, PM21emb$Cost, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22emb$psiLeaf, PM22emb$Cost, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23emb$psiLeaf, PM23emb$Cost, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24emb$psiLeaf, PM24emb$Cost, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31emb$psiLeaf, PM31emb$Cost, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32emb$psiLeaf, PM32emb$Cost, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33emb$psiLeaf, PM33emb$Cost, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34emb$psiLeaf, PM34emb$Cost, lty=3, lwd=1, col=col4)
abline(v=-psiCav, col="gray", lwd=1.5)
legend("topleft", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)



plot(-supplyNetwork11$psiLeaf, PM11_s2$Cost, type="l", col=col1, ylab="Cost function 2", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main = "Cost 2 (original)")
lines(-supplyNetwork12$psiLeaf, PM12_s2$Cost, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13$psiLeaf, PM13_s2$Cost, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14$psiLeaf, PM14_s2$Cost, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21$psiLeaf, PM21_s2$Cost, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22$psiLeaf, PM22_s2$Cost, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23$psiLeaf, PM23_s2$Cost, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24$psiLeaf, PM24_s2$Cost, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31$psiLeaf, PM31_s2$Cost, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32$psiLeaf, PM32_s2$Cost, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33$psiLeaf, PM33_s2$Cost, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34$psiLeaf, PM34_s2$Cost, lty=3, lwd=1, col=col4)
legend("topleft", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)

plot(-supplyNetwork11emb$psiLeaf, PM11emb_s2$Cost, type="l", col=col1, ylab="Cost function 2", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main = "Cost 2 (after cavitation)")
lines(-supplyNetwork12emb$psiLeaf, PM12emb_s2$Cost, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13emb$psiLeaf, PM13emb_s2$Cost, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14emb$psiLeaf, PM14emb_s2$Cost, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21emb$psiLeaf, PM21emb_s2$Cost, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22emb$psiLeaf, PM22emb_s2$Cost, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23emb$psiLeaf, PM23emb_s2$Cost, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24emb$psiLeaf, PM24emb_s2$Cost, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31emb$psiLeaf, PM31emb_s2$Cost, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32emb$psiLeaf, PM32emb_s2$Cost, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33emb$psiLeaf, PM33emb_s2$Cost, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34emb$psiLeaf, PM34emb_s2$Cost, lty=3, lwd=1, col=col4)
abline(v=-psiCav, col="gray", lwd=1.5)
legend("topleft", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)
@
\end{center}
The normalized photosynthetic \emph{gain function} $\beta(\Psi_{leaf})$ reflects the actual assimilation rate with respect to the maximum:
\begin{equation}
\beta(\Psi_{leaf}) = \frac{A(\Psi_{leaf})}{A_{max}}
\end{equation}
where $A_{max}$ is the instantaneous maximum assimilation rate estimated over the full $\Psi_{leaf}$ range. The following figures illustrate the $\theta(\Psi_{leaf})$ and $\beta(\Psi_{leaf})$ curves corresponding to the supply and assimilation functions:
\begin{center}
<<fig=TRUE, width=8, height=3.5, echo=FALSE>>==
par(mar=c(4,4,3,1), mfrow=c(1,2))

plot(-supplyNetwork11$psiLeaf, PM11$Gain, type="l", col=col1, ylab="Gain function", xlab = "Canopy sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main = "Gain (original)")
lines(-supplyNetwork12$psiLeaf, PM12$Gain, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13$psiLeaf, PM13$Gain, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14$psiLeaf, PM14$Gain, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21$psiLeaf, PM21$Gain, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22$psiLeaf, PM22$Gain, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23$psiLeaf, PM23$Gain, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24$psiLeaf, PM24$Gain, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31$psiLeaf, PM31$Gain, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32$psiLeaf, PM32$Gain, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33$psiLeaf, PM33$Gain, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34$psiLeaf, PM34$Gain, lty=3, lwd=1, col=col4)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)


plot(-supplyNetwork11emb$psiLeaf, PM11emb$Gain, type="l", col=col1, ylab="Gain function", xlab = "Canopy sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main = "Gain (after cavitation)")
lines(-supplyNetwork12emb$psiLeaf, PM12emb$Gain, lty=1, lwd=1, col=col2)
lines(-supplyNetwork13emb$psiLeaf, PM13emb$Gain, lty=1, lwd=1, col=col3)
lines(-supplyNetwork14emb$psiLeaf, PM14emb$Gain, lty=1, lwd=1, col=col4)
lines(-supplyNetwork21emb$psiLeaf, PM21emb$Gain, lty=2, lwd=1, col=col1)
lines(-supplyNetwork22emb$psiLeaf, PM22emb$Gain, lty=2, lwd=1, col=col2)
lines(-supplyNetwork23emb$psiLeaf, PM23emb$Gain, lty=2, lwd=1, col=col3)
lines(-supplyNetwork24emb$psiLeaf, PM24emb$Gain, lty=2, lwd=1, col=col4)
lines(-supplyNetwork31emb$psiLeaf, PM31emb$Gain, lty=3, lwd=1, col=col1)
lines(-supplyNetwork32emb$psiLeaf, PM32emb$Gain, lty=3, lwd=1, col=col2)
lines(-supplyNetwork33emb$psiLeaf, PM33emb$Gain, lty=3, lwd=1, col=col3)
lines(-supplyNetwork34emb$psiLeaf, PM34emb$Gain, lty=3, lwd=1, col=col4)
abline(v=-psiCav, col="gray", lwd=1.5)
legend("bottomright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)
@
\end{center}

\subsubsection{Profit maximization at the leaf level}
According to Sperry et al (2016b), stomatal regulation can be effectively estimated by determining the maximum of the \emph{profit function} ($Profit(\Psi_{leaf})$), for which we consider three alternatives corresponding to the two cost functions:
\begin{eqnarray}
Profit_1(\Psi_{leaf}) &=& \beta(\Psi_{leaf})-\theta_1(\Psi_{leaf})\\
Profit_2(\Psi_{leaf}) &=& \beta(\Psi_{leaf})-\theta_2(\Psi_{leaf})\\
\end{eqnarray}
Once $\Psi_{leaf}$ that maximizes profit is determined, the values of the remaining variables are also determined. At this point, it may happen that $g_{sw}(\Psi_{leaf})$ is lower than the minimum (i.e. cuticular) water vapor conductance ($g_{swmin}$) or larger than the maximum water vapor conductance ($g_{swmax}$). These thresholds need to be taken into account when determining the maximum of the profit function. The following figures illustrate the $Profit_1(\Psi_{leaf})$ and $Profit_2(\Psi_{leaf})$ curves of corresponding to the previous cost and gain curves:
\begin{center}
<<fig=TRUE, width=8, height=8, echo=FALSE>>==
par(mar=c(4,4,2,1), mfrow=c(2,2))
plot(-supplyNetwork11$psiLeaf, PM11$Profit, type="l", col=col1, ylab="Profit 1", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main="original")
points(-supplyNetwork11$psiLeaf[PM11$iMaxProfit+1],
         PM11$Profit[PM11$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork12$psiLeaf, PM12$Profit, lty=1, lwd=1, col=col2)
points(-supplyNetwork12$psiLeaf[PM12$iMaxProfit+1],
         PM12$Profit[PM12$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork13$psiLeaf, PM13$Profit, lty=1, lwd=1, col=col3)
points(-supplyNetwork13$psiLeaf[PM13$iMaxProfit+1],
         PM13$Profit[PM13$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork14$psiLeaf, PM14$Profit, lty=1, lwd=1, col=col4)
points(-supplyNetwork14$psiLeaf[PM14$iMaxProfit+1],
         PM14$Profit[PM14$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork21$psiLeaf, PM21$Profit, lty=2, lwd=1, col=col1)
points(-supplyNetwork21$psiLeaf[PM21$iMaxProfit+1],
         PM21$Profit[PM21$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork22$psiLeaf, PM22$Profit, lty=2, lwd=1, col=col2)
points(-supplyNetwork22$psiLeaf[PM22$iMaxProfit+1],
         PM22$Profit[PM22$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork23$psiLeaf, PM23$Profit, lty=2, lwd=1, col=col3)
points(-supplyNetwork23$psiLeaf[PM23$iMaxProfit+1],
         PM23$Profit[PM23$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork24$psiLeaf, PM24$Profit, lty=2, lwd=1, col=col4)
points(-supplyNetwork24$psiLeaf[PM24$iMaxProfit+1],
         PM24$Profit[PM24$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork31$psiLeaf, PM31$Profit, lty=3, lwd=1, col=col1)
points(-supplyNetwork31$psiLeaf[PM31$iMaxProfit+1],
         PM31$Profit[PM31$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork32$psiLeaf, PM32$Profit, lty=3, lwd=1, col=col2)
points(-supplyNetwork32$psiLeaf[PM32$iMaxProfit+1],
         PM32$Profit[PM32$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork33$psiLeaf, PM33$Profit, lty=3, lwd=1, col=col3)
points(-supplyNetwork33$psiLeaf[PM33$iMaxProfit+1],
         PM33$Profit[PM33$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork34$psiLeaf, PM34$Profit, lty=3, lwd=1, col=col4)
points(-supplyNetwork34$psiLeaf[PM34$iMaxProfit+1],
         PM34$Profit[PM34$iMaxProfit+1], col=col4, pch = 0)
legend("topright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)
abline(h=0,col="gray")

plot(-supplyNetwork11emb$psiLeaf, PM11emb$Profit, type="l", col=col1, ylab="Profit 1", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main="after cavitation")
points(-supplyNetwork11emb$psiLeaf[PM11emb$iMaxProfit+1],
         PM11emb$Profit[PM11emb$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork12emb$psiLeaf, PM12emb$Profit, lty=1, lwd=1, col=col2)
points(-supplyNetwork12emb$psiLeaf[PM12emb$iMaxProfit+1],
         PM12emb$Profit[PM12emb$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork13emb$psiLeaf, PM13emb$Profit, lty=1, lwd=1, col=col3)
points(-supplyNetwork13emb$psiLeaf[PM13emb$iMaxProfit+1],
         PM13emb$Profit[PM13emb$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork14emb$psiLeaf, PM14emb$Profit, lty=1, lwd=1, col=col4)
points(-supplyNetwork14emb$psiLeaf[PM14emb$iMaxProfit+1],
         PM14emb$Profit[PM14emb$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork21emb$psiLeaf, PM21emb$Profit, lty=2, lwd=1, col=col1)
points(-supplyNetwork21emb$psiLeaf[PM21emb$iMaxProfit+1],
         PM21emb$Profit[PM21emb$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork22emb$psiLeaf, PM22emb$Profit, lty=2, lwd=1, col=col2)
points(-supplyNetwork22emb$psiLeaf[PM22emb$iMaxProfit+1],
         PM22emb$Profit[PM22emb$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork23emb$psiLeaf, PM23emb$Profit, lty=2, lwd=1, col=col3)
points(-supplyNetwork23emb$psiLeaf[PM23emb$iMaxProfit+1],
         PM23emb$Profit[PM23emb$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork24emb$psiLeaf, PM24emb$Profit, lty=2, lwd=1, col=col4)
points(-supplyNetwork24emb$psiLeaf[PM24emb$iMaxProfit+1],
         PM24emb$Profit[PM24emb$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork31emb$psiLeaf, PM31emb$Profit, lty=3, lwd=1, col=col1)
points(-supplyNetwork31emb$psiLeaf[PM31emb$iMaxProfit+1],
         PM31emb$Profit[PM31emb$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork32emb$psiLeaf, PM32emb$Profit, lty=3, lwd=1, col=col2)
points(-supplyNetwork32emb$psiLeaf[PM32emb$iMaxProfit+1],
         PM32emb$Profit[PM32emb$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork33emb$psiLeaf, PM33emb$Profit, lty=3, lwd=1, col=col3)
points(-supplyNetwork33emb$psiLeaf[PM33emb$iMaxProfit+1],
         PM33emb$Profit[PM33emb$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork34emb$psiLeaf, PM34emb$Profit, lty=3, lwd=1, col=col4)
points(-supplyNetwork34emb$psiLeaf[PM34emb$iMaxProfit+1],
         PM34emb$Profit[PM34emb$iMaxProfit+1], col=col4, pch = 0)
legend("topright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)
abline(h=0,col="gray")
abline(v=-psiCav, col="gray", lwd=1.5)

plot(-supplyNetwork11$psiLeaf, PM11_s2$Profit, type="l", col=col1, ylab="Profit 2", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main="original")
points(-supplyNetwork11$psiLeaf[PM11_s2$iMaxProfit+1],
         PM11_s2$Profit[PM11_s2$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork12$psiLeaf, PM12_s2$Profit, lty=1, lwd=1, col=col2)
points(-supplyNetwork12$psiLeaf[PM12_s2$iMaxProfit+1],
         PM12_s2$Profit[PM12_s2$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork13$psiLeaf, PM13_s2$Profit, lty=1, lwd=1, col=col3)
points(-supplyNetwork13$psiLeaf[PM13_s2$iMaxProfit+1],
         PM13_s2$Profit[PM13_s2$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork14$psiLeaf, PM14_s2$Profit, lty=1, lwd=1, col=col4)
points(-supplyNetwork14$psiLeaf[PM14_s2$iMaxProfit+1],
         PM14_s2$Profit[PM14_s2$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork21$psiLeaf, PM21_s2$Profit, lty=2, lwd=1, col=col1)
points(-supplyNetwork21$psiLeaf[PM21_s2$iMaxProfit+1],
         PM21_s2$Profit[PM21_s2$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork22$psiLeaf, PM22_s2$Profit, lty=2, lwd=1, col=col2)
points(-supplyNetwork22$psiLeaf[PM22_s2$iMaxProfit+1],
         PM22_s2$Profit[PM22_s2$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork23$psiLeaf, PM23_s2$Profit, lty=2, lwd=1, col=col3)
points(-supplyNetwork23$psiLeaf[PM23_s2$iMaxProfit+1],
         PM23_s2$Profit[PM23_s2$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork24$psiLeaf, PM24_s2$Profit, lty=2, lwd=1, col=col4)
points(-supplyNetwork24$psiLeaf[PM24_s2$iMaxProfit+1],
         PM24_s2$Profit[PM24_s2$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork31$psiLeaf, PM31_s2$Profit, lty=3, lwd=1, col=col1)
points(-supplyNetwork31$psiLeaf[PM31_s2$iMaxProfit+1],
         PM31_s2$Profit[PM31_s2$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork32$psiLeaf, PM32_s2$Profit, lty=3, lwd=1, col=col2)
points(-supplyNetwork32$psiLeaf[PM32_s2$iMaxProfit+1],
         PM32_s2$Profit[PM32_s2$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork33$psiLeaf, PM33_s2$Profit, lty=3, lwd=1, col=col3)
points(-supplyNetwork33$psiLeaf[PM33_s2$iMaxProfit+1],
         PM33_s2$Profit[PM33_s2$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork34$psiLeaf, PM34_s2$Profit, lty=3, lwd=1, col=col4)
points(-supplyNetwork34$psiLeaf[PM34_s2$iMaxProfit+1],
         PM34_s2$Profit[PM34_s2$iMaxProfit+1], col=col4, pch = 0)
legend("topright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)
abline(h=0,col="gray")

plot(-supplyNetwork11emb$psiLeaf, PM11emb_s2$Profit, type="l", col=col1, ylab="Profit 2", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 7), ylim=c(0,1), lwd=1, main="after cavitation")
points(-supplyNetwork11emb$psiLeaf[PM11emb_s2$iMaxProfit+1],
         PM11emb_s2$Profit[PM11emb_s2$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork12emb$psiLeaf, PM12emb_s2$Profit, lty=1, lwd=1, col=col2)
points(-supplyNetwork12emb$psiLeaf[PM12emb_s2$iMaxProfit+1],
         PM12emb_s2$Profit[PM12emb_s2$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork13emb$psiLeaf, PM13emb_s2$Profit, lty=1, lwd=1, col=col3)
points(-supplyNetwork13emb$psiLeaf[PM13emb_s2$iMaxProfit+1],
         PM13emb_s2$Profit[PM13emb_s2$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork14emb$psiLeaf, PM14emb_s2$Profit, lty=1, lwd=1, col=col4)
points(-supplyNetwork14emb$psiLeaf[PM14emb_s2$iMaxProfit+1],
         PM14emb_s2$Profit[PM14emb_s2$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork21emb$psiLeaf, PM21emb_s2$Profit, lty=2, lwd=1, col=col1)
points(-supplyNetwork21emb$psiLeaf[PM21emb_s2$iMaxProfit+1],
         PM21emb_s2$Profit[PM21emb_s2$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork22emb$psiLeaf, PM22emb_s2$Profit, lty=2, lwd=1, col=col2)
points(-supplyNetwork22emb$psiLeaf[PM22emb_s2$iMaxProfit+1],
         PM22emb_s2$Profit[PM22emb_s2$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork23emb$psiLeaf, PM23emb_s2$Profit, lty=2, lwd=1, col=col3)
points(-supplyNetwork23emb$psiLeaf[PM23emb_s2$iMaxProfit+1],
         PM23emb_s2$Profit[PM23emb_s2$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork24emb$psiLeaf, PM24emb_s2$Profit, lty=2, lwd=1, col=col4)
points(-supplyNetwork24emb$psiLeaf[PM24emb_s2$iMaxProfit+1],
         PM24emb_s2$Profit[PM24emb_s2$iMaxProfit+1], col=col4, pch = 0)
lines(-supplyNetwork31emb$psiLeaf, PM31emb_s2$Profit, lty=3, lwd=1, col=col1)
points(-supplyNetwork31emb$psiLeaf[PM31emb_s2$iMaxProfit+1],
         PM31emb_s2$Profit[PM31emb_s2$iMaxProfit+1], col=col1, pch = 0)
lines(-supplyNetwork32emb$psiLeaf, PM32emb_s2$Profit, lty=3, lwd=1, col=col2)
points(-supplyNetwork32emb$psiLeaf[PM32emb_s2$iMaxProfit+1],
         PM32emb_s2$Profit[PM32emb_s2$iMaxProfit+1], col=col2, pch = 0)
lines(-supplyNetwork33emb$psiLeaf, PM33emb_s2$Profit, lty=3, lwd=1, col=col3)
points(-supplyNetwork33emb$psiLeaf[PM33emb_s2$iMaxProfit+1],
         PM33emb_s2$Profit[PM33emb_s2$iMaxProfit+1], col=col3, pch = 0)
lines(-supplyNetwork34emb$psiLeaf, PM34emb_s2$Profit, lty=3, lwd=1, col=col4)
points(-supplyNetwork34emb$psiLeaf[PM34emb_s2$iMaxProfit+1],
         PM34emb_s2$Profit[PM34emb_s2$iMaxProfit+1], col=col4, pch = 0)
legend("topright", bty="n", legend=textures, lwd=1, lty=1:3, cex=0.8)
abline(h=0,col="gray")
abline(v=-psiCav, col="gray", lwd=1.5)

@
\end{center}
Squares in the previous figures indicate the maximum profit points in each situation. In the case of non-cavitated system (left panels), the drier the soil, the closer is the maximum profit $\Psi_{leaf}$ to soil water potential as one would expect intuitively. This occurs for all three profit functions. Unlike $\theta_1$ which is different for each soil texture (and soil potential), $\theta_2$ is the same for all soil textures. As a result, the regulation points do not differ much among textures in $Profit_2$ and $Profit_3$ because the only difference is in the gain function. For a system with xylem cavitation (right panel), the maximum $Profit_1$ curves behave strangely. In particular may get a more negative value for $\Psi_{canopy}$ for wet soils than for dry soils. This effect does not occur when using $Profit_2$. $Profit_2$ brings plant water potentials to more negative values after cavitation. Although cavitation did not change the $\theta_2$ function, the supply function is flatter and this affects the gain function, making it increase less steeply with lower potentials.

Differences between profit functions can be more easily seen when plotting the change from original (uncavitated) regulation to the cavitated one, in terms of both canopy sap pressure and flow rate:

\begin{center}
<<fig=TRUE, width=4, height=3.5, echo=FALSE>>==
par(mar=c(4,4,2,1), mfrow=c(1,1))
plot(-supplyNetwork11$psiLeaf, supplyNetwork11$E, type="n", col=col1, ylab="Flow rate", xlab = "Leaf sap pressure (-MPa)",  xlim=c(0, 5), ylim=c(0,4), lwd=1, main="")
p11 = c(-supplyNetwork11$psiLeaf[PM11$iMaxProfit+1],
         supplyNetwork11$E[PM11$iMaxProfit+1])
p12 = c(-supplyNetwork12$psiLeaf[PM12$iMaxProfit+1],
         supplyNetwork12$E[PM12$iMaxProfit+1])
p13 = c(-supplyNetwork13$psiLeaf[PM13$iMaxProfit+1],
         supplyNetwork13$E[PM13$iMaxProfit+1])
p14=c(-supplyNetwork14$psiLeaf[PM14$iMaxProfit+1],
         supplyNetwork14$E[PM14$iMaxProfit+1])
p11_cav = c(-supplyNetwork11emb$psiLeaf[PM11emb$iMaxProfit+1],
         supplyNetwork11emb$E[PM11emb$iMaxProfit+1])
p12_cav = c(-supplyNetwork12emb$psiLeaf[PM12emb$iMaxProfit+1],
         supplyNetwork12emb$E[PM12emb$iMaxProfit+1])
p13_cav = c(-supplyNetwork13emb$psiLeaf[PM13emb$iMaxProfit+1],
         supplyNetwork13emb$E[PM13emb$iMaxProfit+1])
p14_cav = c(-supplyNetwork14emb$psiLeaf[PM14emb$iMaxProfit+1],
         supplyNetwork14emb$E[PM14emb$iMaxProfit+1])
points(rbind(p11,p12,p13,p14), col=c(col1, col2, col3,col4), pch = 0)
points(rbind(p11_cav,p12_cav,p13_cav,p14_cav), col=c(col1, col2, col3,col4), pch = 15)
lines(rbind(p11,p11_cav), col=col1)
lines(rbind(p12,p12_cav), col=col2)
lines(rbind(p13,p13_cav), col=col3)
lines(rbind(p14,p14_cav), col=col4)

p11_s2 = c(-supplyNetwork11$psiLeaf[PM11_s2$iMaxProfit+1],
         supplyNetwork11$E[PM11_s2$iMaxProfit+1])
p12_s2 = c(-supplyNetwork12$psiLeaf[PM12_s2$iMaxProfit+1],
         supplyNetwork12$E[PM12_s2$iMaxProfit+1])
p13_s2 = c(-supplyNetwork13$psiLeaf[PM13_s2$iMaxProfit+1],
         supplyNetwork13$E[PM13_s2$iMaxProfit+1])
p14_s2 = c(-supplyNetwork14$psiLeaf[PM14_s2$iMaxProfit+1],
         supplyNetwork14$E[PM14_s2$iMaxProfit+1])
p11_cav_s2 = c(-supplyNetwork11emb$psiLeaf[PM11emb_s2$iMaxProfit+1],
         supplyNetwork11emb$E[PM11emb_s2$iMaxProfit+1])
p12_cav_s2 = c(-supplyNetwork12emb$psiLeaf[PM12emb_s2$iMaxProfit+1],
         supplyNetwork12emb$E[PM12emb_s2$iMaxProfit+1])
p13_cav_s2 = c(-supplyNetwork13emb$psiLeaf[PM13emb_s2$iMaxProfit+1],
         supplyNetwork13emb$E[PM13emb_s2$iMaxProfit+1])
p14_cav_s2 = c(-supplyNetwork14emb$psiLeaf[PM14emb_s2$iMaxProfit+1],
         supplyNetwork14emb$E[PM14emb_s2$iMaxProfit+1])
points(rbind(p11_s2,p12_s2,p13_s2,p14_s2), col=c(col1, col2, col3,col4), pch = 1)
points(rbind(p11_cav_s2,p12_cav_s2,p13_cav_s2,p14_cav_s2), col=c(col1, col2, col3,col4), pch = 19)
lines(rbind(p11_s2,p11_cav_s2), col=col1)
lines(rbind(p12_s2,p12_cav_s2), col=col2)
lines(rbind(p13_s2,p13_cav_s2), col=col3)
lines(rbind(p14_s2,p14_cav_s2), col=col4)

legend("topleft", bty="n", legend=c("Profit 1 (original)", "Profit 1 (cavitated)", "Profit 2 (original)", "Profit 2 (cavitated)"), pch=c(0,15, 1,19), cex=0.6)
abline(v=-psiCav, col="gray")
legend("topright", bty="n", col=c(col1,col2,col3,col4), lty=1, legend=c("P_soil = -0.1/-0.2/-0.3","P_soil = -1.1/-1.2/-1.3","P_soil = -2.1/-2.2/-2.3","P_soil = -3.1/-3.2/-3.3"), cex=0.6)
@
\end{center}
In $Profit_1$ irreversible cavitation often brings, after soil rewetting, less conservative stomatal regulation that enables higher flow rates. This does not seem to happen in $Profit_2$, where despite irreversible cavitation leads to more negative water potentials, predicted flow rates after rewetting are not above those predicted before cavitation.

\subsubsection{Scaling to the plant level}

So far, we have considered stomatal regulation by at the leaf level only. At the plant level, the gain function could be build from the crown photosynthesis function $A(\Psi_{leaf})$ that we defined in subsection '\texttt{Crown photosynthesis}'. However, using the crown photosynthesis function would imply the assumption that the same stomatal aperture occurs in all leaves of the crown, independently of whether they are in shade or sunlit. A more realistic approach is to determine stomatal regulation by profit maximization for sunlit and shade leaves separately; and then determining the average photosynthesis and flow rate from the leaf area of each leaf type. The gain function and profit maximization calculations conducted for each leaf type yield instantaneous water potentials $\Psi_{sunlit}$ and $\Psi_{shade}$. They also yield flow values $E_{shade}$ and $E_{sunlit}$, in mmol H$_2$O·s$^{-1}$·m$^{-2}$ of leaf area unit. The average flow rate in mmol H$_2$O·s$^{-1}$·m$^{-2}$ per leaf area unit at the plant level is the weighed average:
\begin{equation}
 E_{plant} = \frac{E_{sunlit} \cdot LAI_{sunlit} + E_{shade} \cdot LAI_{shade}}{LAI_{sunlit} + LAI_{shade}}
\end{equation}
where $LAI_{sunlit}$ and $LAI_{shade}$ are the cohorts LAI values for sunlit and shade leaves, respectively. Net photosynthesis per leaf area of sunlit and shade leaves (i.e. $A_{n,sunlit}$ and $A_{n,shade}$) is aggregated similarly:
\begin{equation}
 A_{n, plant} = \frac{A_{n,sunlit} \cdot LAI_{sunlit} + A_{n,shade} \cdot LAI_{shade}}{LAI_{sunlit} + LAI_{shade}}
\end{equation}
Profit maximization calculations for shade and sunlit leaves imply different amount of water extracted from the soil layers and different plant water potentials. To overcome this issue, we must use the hydraulic supply function  to find the extraction flows from soil layers, the  water potential at the root crown and the 'average' water potential of the crown all corresponding to the average flow $E_{plant}$.

\section{Transpiration and photosynthesis after soil disconnection}

Considering water compartments allows tracking leaf and stem (i.e. plant) \emph{dessication}, either when the plant is connected to the soil or when transpiration flow comes from the plant itself. In \texttt{medfate}, disconnection from a given soil layer occurs when its water potential is too low with respect to the root xylem vulnerability curve. The user can control this behaviour by specifying a $p_{root}$ threshold for relative conductance, and the plant will be disconnected from a soil layer if $k_{r}(\Psi_{soil})/k_{r,max} < p_{root}$. An interesting situation arises when a plant is disconnected from all soil layers. In this case, the steady-state calculations cannot be used to determine flows, so one is forced to use a full discrete time approximation, with compartments and flows indicated in the figure below.

\begin{figure}[h!]
\includegraphics[width=\textwidth]{hydraulics_disc.jpg}
\end{figure}

As before, each time step $\Delta t$ is divided into $m$ substeps and instantaneous lateral flows between symplastic and apoplastic compartments are calculated as before. In this case, however, one needs to calculate instantaneous flows between stem apoplastic compartments using:
\begin{equation}
F_{i, i+1} = k_{s}(\min(\Psi_{apo,i}, \Psi_{cav, i})) \cdot (\Psi_{apo, i} - \Psi_{apo, i+1})
\end{equation}
and between the last stem compartment and the leaf using:
\begin{equation}
F_{S, l} = k_{l}(\Psi_{apo, l}) \cdot (\Psi_{apo, S} - \Psi_{apo, l})
\end{equation}
The flow from the leaf to the atmosphere is dictated by the minimum stomatal conductance and the vapour pressure deficit. For each time substep all flows are calculated and water content of compartments is updated. Then the equations of relative water content are inversed to find the water potentials for the next time substep.


The instantaneous flow rate between symplastic and apoplastic compartments can be approximated using a lateral conductance $k_{lat}$ and the difference in water potentials. For the leaf we have:
\begin{equation}
F_{lat, l} = k_{lat} \cdot (\Psi_{sym, l} - \Psi_{apo,l})
\end{equation}
where $\Psi_{sym, l}$ is the water potential of the symplastic leaf compartment and $\Psi_{apo,l}$ is the water potential in the apoplastic leaf compartment. If $\Psi_{sym, l} > \Psi_l$ then the flow will be positive towards the leaf apoplasm and if $\Psi_{sym, l} < \Psi_l$ the flow will instead refill the leaf symplastic tissue. An analogous equation can be used to calculate the instantaneous lateral flow between symplastic and apoplastic compartments in any stem segment:
\begin{equation}
F_{lat, i} = k_{lat} \cdot (\Psi_{sym, i} - \Psi_{apo, i})
\end{equation}

\section{Parameterization}

\texttt{medfate} provides routines to estimate them from a minimum set of input parameters. The whole process of estimation of those parameters is done automatically in functions \texttt{swbInput()} and \texttt{forest2swbInput()}, with the user controlling the process through the species parameter table input (e.g., \texttt{SpParamsMED}) an object \texttt{control} (see function \texttt{defaultControl()} for control parameter defaults). In the following we detail the calculations and present individual functions that perform partial calculations.

\subsection{Hydraulics}
\subsubsection{Vulnerability curves}
Leaf and xylem vulnerability curves are often described using $\Psi_{50}$, the water potential at which hydraulic conductance is half of maximum. As noted above, parameter $d$ in eq. \ref{eq:xylemvulnerability} is the water potential $\Psi$ at which $k_{x}(\Psi)/k_{x,max} = e^{-1} = 0.367$ (and the same for eq. \ref{eq:leafvulnerability}). Hence, the two definitions do not match. Using the definition of $\Psi_{50}$ in eq. \ref{eq:xylemvulnerability} we have:
\begin{equation}
0.5 = e^{-((\Psi_{50}/d)^c)}
\end{equation}
from which we obtain that the value for parameter $d$ should be:
\begin{equation}
d = \frac{\Psi_{50}}{(-ln(0.5))^{1/c}}= \frac{\Psi_{50}}{0.69314^{1/c}}
\end{equation}
Hence, this operation should be used when specifying this parameter from $\Psi_{50}$. Vulnerability curves for root xylem are less common than for stem xylem. If these values are missing, functions \texttt{swbInput()} and \texttt{forest2swbInput()} will use for $c$ the same value as in stems, and for $d$ half the value of that of stems (Sperry et al. 2016a). If the values for leaves are missing, functions \texttt{swbInput()} and \texttt{forest2swbInput()} will use for $c$ the same value as in stems, and for $d$ 66\% of the value for stems.

Rhizosphere conductance is regulated in the model using the van Genuchten function (eq. \ref{eq:rhizovulnerability}), and parameters $n$ and $\alpha$ for each soil layer were already available from soil initialization (i.e. function \texttt{soil()}):
<<>>=
s = soil(defaultSoilParams(3))
s$VG_n
s$VG_alpha
@

Aboveground and belowground stem maximum conductance values at the plant level ($k_{s, max}$ and $k_{r, max}$) will not be normally available and the same for the rhizosphere ($k_{rh, max}$). 

\subsubsection{Leaf maximum conductance}
Leaf maximum conductance ($k_{l, max}$, in mmol·m$^{-2}$·s$^{-1}$·MPa$^{-1}$) is an input parameter that should be provided for each species. When missing, leaf maximum hydraulic conductance is assumed $k_{l, max}=6$ for conifers and $k_{l, max}=8$ for angiosperms (Sack \emph{et al.} 2006).

\subsubsection{Stem xylem maximum conductance}
Estimation of maximum stem conductance ($k_{s,max}$, in mmol·m$^{-2}$·s$^{-1}$·MPa$^{-1}$) is done by function \texttt{hydraulics\_maximumStemHydraulicConductance()} and follows the work by Savage \emph{et al.} (2010), Olson \emph{et al.} (2014) and Christoffersen \emph{et al.} (2016). Calculations are based on tree height and two species-specific parameters: maximum sapwood reference conductivity ($K_{s,max,ref}$) and the ratio of leaf area to sapwood area ($A_{l}/A_{s}$; \texttt{Al2As} in \texttt{SpParamsMED}), i.e. the inverse of the Huber value $H_v$.

The reference value for maximum sapwood conductivity $K_{s,max,ref}$ is assumed to have been measured on a \emph{terminal branch} of a plant of known height $H_{ref}$. If our target plant is very different in height, the conduits of terminal branches will have different radius and hence conductivity. We correct the reference conductivity to the target plant height using the following empirical relationship, developed by Olson \emph{et al.} (2014) between tree height and diameter of conduits for angiosperms and the equation described by Christoffersen \emph{et al.} (2016):
\begin{eqnarray}
2 \cdot r_{int,H}&=& 10^{1.257+(0.24\cdot log_{10}(H))} \\
2 \cdot r_{int,ref}&=&10^{1.257+(0.24\cdot log_{10}(H_{ref}))}\\
K_{s,max,cor}&=&K_{s,max,ref}\cdot (r_{int,H}/r_{int,ref})^{2}
\end{eqnarray}
Where $r_{int,H}$ is the radius of conduits for a terminal branch of a tree of height $H$ and $r_{int,ref}$ is the corresponding radius for a tree of height $H_{ref}$ ($H$ and $H_{ref}$ are measured in m). The form of the empirical relationship by Olson \emph{et al.} (2014) is:

<<fig=TRUE, width=5, height=5, echo=FALSE>>=
rad <- numeric(length(50:5000))
Hs <- 50:5000

rad = 0.5*10^(1.257+ 0.24 * log10(Hs/100))

plot(Hs/100, rad, type = 'l', xlab = 'H [m]',
     ylab = 'Conduit radius (in micras)', log="x")
@


Let's consider an example for a \emph{Quercus ilex} target tree of 4m height and where species-specific conductivity $K_{s,max,ref} = 0.77$ is the apical value for trees of $H_{ref} = 6.6$ m (in \texttt{medfate}, values of $H_{ref}$ are taken from median height values; see parameter \texttt{Hmed} in \texttt{SpParamsMED}). The corrected conductivity  for a tree of height 4 m will be a bit lower than that of the reference height:
<<>>=
xylem_kmax = 0.77
H = 400 # in cm
Href = 660 # in cm
f = hydraulics_referenceConductivityHeightFactor(Href, H);
f
xylem_kmax_cor = xylem_kmax * f
xylem_kmax_cor
@

Once the reference conductivity is corrected, the maximum stem conductance without accounting for conduit taper is:
\begin{equation}
k_{s,max, notaper}=\frac{1000}{0.018} \frac{K_{s,max,cor}\cdot A_{s}}{H\cdot A_{l}}
\end{equation}
where $H$ is the tree height (here in m), $A_{s}$ is the sapwood area, $A_{l}$ is the leaf area and 1000/0.018 is a factor used to go from kg to mmol. The ratio $A_{l}/A_{s} = 1/H_v$ is a fixed species parameter in soil water balance calculations (see parameter \texttt{Al2As} in \texttt{SpParamsMED}), but becomes variable when simulating plant growth. Let's assume that \emph{Quercus ilex} the leaf to sapwood area ratio is $A_{l}/A_{s} = 2512$. The maximum (leaf-specific) stem conductance without taper ($k_{s, max, notaper}$) for the tree of 4 m height is then:

<<>>==
Al2As = 2512 

kstemmax = hydraulics_maximumStemHydraulicConductance(xylem_kmax, 
                  Href, Al2As, H, angiosperm = TRUE,taper = FALSE)
kstemmax
@ 

In order to consider taper of xylem conduits we calculate the whole-tree conductance per unit leaf area ($k_{s, max, taper}$) as described in Christoffersen \emph{et al.} (2016):
\begin{equation}
k_{s, max, taper}=\frac{1000}{0.018} \cdot \frac{K_{s,max,pet}\cdot A_{s}}{H\cdot A_{l}}\cdot \chi_{tap:notap,ag}(H)
\end{equation}
where $K_{s,max,pet}$ is the conductivity at the petiole level and $\chi_{tap:notap,ag}(H)$ is the taper factor accounting for the decrease in the xylem conduits diameter with the height, from the petiole to base of the trunk, which mitigates the negative effects of height on the hydraulic safety. The conductivity at the petiole level is obtained from $K_{s,max,ref}$ using again:
\begin{equation}
K_{s,max,pet} = K_{s,max,ref}\cdot (r_{int, pet}/r_{int,ref})^{2}
\end{equation}
where $r_{int, pet}$ is the radius of the petiole in the model of Savage et al. (2010). Christofferset et al. (2016) use $r_{int, pet} = 10$ $\mu$m but we define it as the radius of apical conduits in a tree of 1 m height:
<<>>=
hydraulics_terminalConduitRadius(100.0)
@
$\chi_{tap:notap,ag}(H)$ is calculated as described in the Appendix 1 section of Christoffersen \emph{et al.} (2016) (see also Savage et al. 2010). The following figure shows the value of $\chi_{tap:notap,ag}$ for different heights:

<<fig=TRUE, width=5, height=5, echo=FALSE>>=
tapnotap <- numeric(length(10:5000))
Hs <- 10:5000

for(i in 1:length(Hs)) tapnotap[i] = hydraulics_taperFactorSavage(Hs[i])
plot(Hs/100, tapnotap, type = 'l', xlab = 'H [m]',
     ylab = 'Taper conductance factor', log="x")
abline(v=1, col="gray", lty=2)
abline(h=tapnotap[which(Hs==100)], col="gray", lty=2)
@

Note that, since $\chi_{tap:notap,ag}(1) = 3.82$ (indicated using grey dashed lines in the last figure), the equation of maximum conductance with taper would give a higher conductance than the equation without taper for a tree of 1 m height, which is supposed to have a conductance equal to conductivity. To solve this issue we define the taper factor as $\chi_{tap:notap,ag}(H)/\chi_{tap:notap,ag}(1)$:
\begin{equation}
k_{s, max, taper}=\frac{1000}{0.018} \cdot \frac{K_{s,max,pet}\cdot A_{s}}{H\cdot A_{l}}\cdot \frac{\chi_{tap:notap,ag}(H)}{\chi_{tap:notap,ag}(1)}
\end{equation}
The maximum stem conductance with taper ($k_{s, max, taper}$) of a \emph{Q. ilex} tree of 4 m height, calculated with this second equation, is:

<<>>==
kstemmax_tap = hydraulics_maximumStemHydraulicConductance(xylem_kmax, 
                      Href, Al2As, H, angiosperm = TRUE, taper = TRUE)
kstemmax_tap
@ 

The next two plots show the variation of $k_{s,max}$ for \emph{Quercus ilex} depending on the tree height and with/without considering taper of conduits. The plot on the right (both axes in log) show the slope of the dependency of conductance with height in both cases:

<<fig=TRUE, width=10, height=5, echo=FALSE>>=
par(mfrow=c(1,2))
qi_with_tap <- numeric(length(50:5000))
qi_no_tap <- qi_with_tap
Hs <- 50:5000

for (i in 1:length(Hs)) {
  qi_with_tap[i] <- hydraulics_maximumStemHydraulicConductance(
  xylem_kmax, Href, Al2As, Hs[i], angiosperm = TRUE, taper =TRUE
)
  qi_no_tap[i] <- hydraulics_maximumStemHydraulicConductance(
  xylem_kmax, Href, Al2As, Hs[i], angiosperm = TRUE,taper = FALSE
)
}

plot(Hs/100, qi_with_tap, type = 'l', xlab = 'H [m] (log)',
     ylim = c(min(c(qi_with_tap,qi_no_tap)), max(c(qi_with_tap,qi_no_tap))),
     ylab = 'Maximum stem conductance (mmol·m-2·s-1·MPa-1)', log="x", xlim=c(0.5,50))
lines(Hs/100, qi_no_tap, lty = 2)
legend('topright', legend = c('Taper', 'No taper'), lty = 1:2, bty="n")
plot(Hs/100, qi_with_tap, type = 'l', xlab = 'H [m] (log)',
     ylim = c(min(c(qi_with_tap,qi_no_tap)), max(c(qi_with_tap,qi_no_tap))),
     ylab = 'Maximum stem conductance (mmol·m-2·s-1·MPa-1) (log)', log="xy", xlim=c(0.5,50))
lines(Hs/100, qi_no_tap, lty = 2)
legend('topright', legend = c('Taper', 'No taper'), lty = 1:2, bty="n")
@



\subsubsection{Root xylem maximum hydraulic conductance}
To obtain maximum root xylem conductance ($k_{r, max}$, in mmol·m$^{-2}$·s$^{-1}$·MPa$^{-1}$), one option taken by Christoffersen et al. (2016) is to assume that minimum stem resistance (inverse of maximum conductance) represents a fixed proportion of the minimum total tree (stem+root) resistance. A value 0.625 (i.e. 62.5\%) suggested by these authors leads to maximum total tree conductance for our \emph{Q. ilex} tree being:
<<>>==
ktot = kstemmax*0.625
ktot
@
and the maximum root xylem conductance would be therefore:
<<>>==
krootmax = 1/((1/ktot)-(1/kstemmax))
krootmax
@ 
Now, we need to divide total maximum conductance of the root system xylem among soil layers we need weights inversely proportional to the length of transport distances (Sperry et al. 2016). Vertical transport lengths can be calculated from soil depths and radial spread can be calculated assuming cylinders with volume proportional to the proportions of fine root biomass. Let's assume a soil with three layers:
<<>>==
d = s$dVec
d
@
The proportion of fine roots in each layer, assuming a linear dose response model, will be:
<<>>==
Z50 = 200
Z95 = 1500
v1 = root_ldrDistribution(Z50,Z95, d)
v1
@
Having this information, the calculation of root length (i.e. the sum of vertical and radial lengths) to each layer ($L_j$) is done using function \texttt{root\_rootLength()}:
<<>>==
rl = root_rootLengths(v1, d)
rl
@
where lengths are in mm. The proportion of total root xylem conductance corresponding to each layer ($w_j$) is given by \texttt{root\_xylemConductanceProportions()}:
<<>>==
w1 = root_xylemConductanceProportions(v1, d)
w1
@
Xylem conductance proportions can be quite different than the fine root biomass proportions. This is because radial lengths are largest for the first top layers and vertical lengths are largest for the bottom layers. The maximum root xylem conductances of each layer will be the product of maximum total conductance of root xylem and weights:
<<>>=
w1*krootmax
@
In \texttt{medfate} we calculate maximum root xylem conductance using a reference root xylem conductivity value ($K_{r,max,ref}$):
\begin{equation}
k_{r,max}=\frac{1000}{0.018} \cdot \sum_{j}{\frac{w_j \cdot K_{r,max,ref}\cdot A_{s}}{L_j\cdot A_{l}}}
\end{equation}
where $w_j$ are root xylem conductance proportion of layer $j$ and $L_j$ is the root length (in m) to layer $j$. Note that here we use weights $w_j$ assuming they represent proportions of total sapwood area that come from each layer (i.e. the longer the path the larger the proportion of sapwood area). This calculation is made available by function \texttt{hydraulics\_maximumRootHydraulicConductance()}. When $K_{r,max,ref}$ is missing, then we assume that $K_{r,max,ref} = $K_{x,max,ref}$. Let's consider the same \emph{Q. ilex} tree of 4m height as before. If we specify root xylem specific conductivity as $K_{r,max,ref} = K_{s,max,ref} =0.77$ we have:
<<>>=
rootxylem_kmax = 0.77
krootmax = hydraulics_maximumRootHydraulicConductance(rootxylem_kmax, Al2As, 
                                                      v1, d)
krootmax
@
The maximum root xylem conductances of each layer would be:
<<>>=
krootmaxvec = w1*krootmax
krootmaxvec
@
and the fraction of total xylem resistance due to stem would be:
<<>>=
(1/kstemmax)/((1/kstemmax)+(1/krootmax))
@
In contrast with the approach of Christoffersen \emph{et al.} (2016), in this approach the root maximum conductance depends root length and distribution, and is not a fixed fraction of stem maximum conductance. Assuming constant root length, then the proportion of total resistance due to the stem will increase with tree height (Magnani \emph{et al.} 2000):

<<fig=TRUE, width=4.5, height=4.5, echo=FALSE>>=
p_stem <- numeric(length(50:5000))
Hs <- 50:5000

for (i in 1:length(Hs)) {
  ks <- hydraulics_maximumStemHydraulicConductance(xylem_kmax, Href, Al2As, Hs[i], taper = FALSE)
  p_stem[i] = (1/ks)/((1/ks)+(1/krootmax))
}

plot(Hs/100, p_stem*100, type = 'l', xlab = 'H [m]', ylab = 'Percentage of total resistance due to stem', log="x", ylim=c(0,100),
     xlim=c(0.5,50))
abline(h=62.5, col="gray")
@

where the horizontal gray line indicates the value of 62.5\%. Of course rooting depth also increases with tree age, but young trees have higher root-to-shoot ratios than older ones. Hence, a root maximum conductance that is not fixed but increases with age seems a priori more realistic. Moreover, Christoffersen \emph{et al.} (2016) justify the value of 62.5\% from a study which quantified total aboveground and belowground resistance in tropical trees (Fisher \emph{et al.} 2006) under near-saturated (wet season) conditions, but values of belowground resistance reported in this study for wet conditions and trees of 30 m height are around 13\%, which equals to 87\% fraction of aboveground resistance. On the other hand, while rooting depths are limited by soil depth, lateral root length increases with age and, hence, the model could be made more realistic if this is taken into account and the curve above would probably saturate at lower percentages.

\subsubsection{Rhizosphere maximum hydraulic conductance}
Maximum rhizosphere conductance ($k_{rh, max}$, in mmol·m$^{-2}$·s$^{-1}$·MPa$^{-1}$) is difficult to measure directly, as it depends on the rhizosphere (i.e. fine root) surface in each soil layer, and will probably always be a parameter to be calibrated. Instead of trying to estimate rhizosphere surface from root architecture (Sperry \emph{et al.} 1998), we follow Sperry \emph{et al.} (2016) and determine the maximum rhizosphere conductance in each layer from an inputed 'average percentage rhizosphere resistance'. The percentage of continuum resistance corresponding to the rhizosphere is calculated from the vulnerability curves of stem, root and rhizosphere at the same water potential. The average resistance is found by evaluating the percentage for water potential values between 0 and $\Psi_{crit}$. The following figure illustrates how the supply function, for different soil water potentials, is affected by increasing values of the average percentage of rhizosphere resistance:

<<fig=TRUE, width=4.5, height=4.5, echo=FALSE>>=
krhizomaxvec1 = rep(0,3)
pres = c(5,20,35,50)
for(i in 1:length(pres)) {
  krhizomaxvec1[1]= hydraulics_findRhizosphereMaximumConductance(pres[i], 
                     s$VG_n[1],s$VG_alpha[1],
                     krootmax, rootc,rootd, 
                     kstemmax, stemc, stemd,
                     kleafmax, leafc, leafd)
  krhizomaxvec1[2]= hydraulics_findRhizosphereMaximumConductance(pres[i], 
                     s$VG_n[2],s$VG_alpha[2],
                     krootmax, rootc,rootd, 
                     kstemmax, stemc, stemd,
                     kleafmax, leafc, leafd)
  krhizomaxvec1[3]= hydraulics_findRhizosphereMaximumConductance(pres[i], 
                     s$VG_n[3],s$VG_alpha[3],
                     krootmax, rootc,rootd, 
                     kstemmax, stemc, stemd,
                     kleafmax, leafc, leafd)
  sfn1 = hydraulics_supplyFunctionNetwork(psiSoilLayers1,
                                  krhizomaxvec1,s$VG_n,s$VG_alpha,
                                  krootmaxvec, rootc,rootd,
                                  kstemmax, stemc,stemd,
                                  kleafmax, leafc, leafd,
                                  PLCstem = plcCav,
                                  maxNsteps = 400)
  sfn2 = hydraulics_supplyFunctionNetwork(psiSoilLayers2,
                                  krhizomaxvec1,s$VG_n,s$VG_alpha,
                                  krootmaxvec, rootc,rootd,
                                  kstemmax, stemc,stemd,
                                  kleafmax, leafc, leafd,
                                  PLCstem = plcCav,
                                  maxNsteps = 400)
  sfn3 = hydraulics_supplyFunctionNetwork(psiSoilLayers3,
                                  krhizomaxvec1,s$VG_n,s$VG_alpha,
                                  krootmaxvec, rootc,rootd,
                                  kstemmax, stemc,stemd,
                                  kleafmax, leafc, leafd,
                                  PLCstem = plcCav,
                                  maxNsteps = 400)
  sfn4 = hydraulics_supplyFunctionNetwork(psiSoilLayers4,
                                  krhizomaxvec1,s$VG_n,s$VG_alpha,
                                  krootmaxvec, rootc,rootd,
                                  kstemmax, stemc,stemd,
                                  kleafmax, leafc, leafd,
                                  PLCstem = plcCav,
                                  maxNsteps = 400)
  if(i==1) {
    plot(-sfn1$psiLeaf, sfn1$E ,type="l", ylab="Flow rate  (mmol·m-2·s-1)", 
       xlab = "Leaf Pressure (-MPa)",  main="",  xlim=c(0, 7), ylim=c(0,max(sfn1$E)), lwd=1, col = col1)
    lines(-sfn2$psiLeaf, sfn2$E,lwd=1, lty=1, col = col2)
    lines(-sfn3$psiLeaf, sfn3$E,lwd=1, lty=1, col = col3)
    lines(-sfn4$psiLeaf, sfn4$E,lwd=1, lty=1, col = col4)
  } else {
    lines(-sfn1$psiLeaf, sfn1$E,lwd=1, lty=i, col = col1)
    lines(-sfn2$psiLeaf, sfn2$E,lwd=1, lty=i, col = col2)
    lines(-sfn3$psiLeaf, sfn3$E,lwd=1, lty=i, col = col3)
    lines(-sfn4$psiLeaf, sfn4$E,lwd=1, lty=i, col = col4)
  }  
}
abline(h=0, col="gray")
legend("topright",legend=paste("av. resist ", pres), bty="n", lty=1:4, cex=0.8)
@

Sperry et al. (2016a) found average percentages of rhizosphere resistance around 67\%, but these exceptionally-high values were a consequence of using an unsegmented supply function (i.e. single vulnerability curve for roots and stem). If we specify a 15\% of average resistance in the rhizosphere (see parameter \texttt{averageFracRhizosphereResistance} in function \texttt{defaultControl()}), the maximum rhizosphere conductance values for the three layers are found calling:
<<>>=
krmax = rep(0,3) 
krmax[1]= hydraulics_findRhizosphereMaximumConductance(15, 
                     s$VG_n[1],s$VG_alpha[1],
                     krootmax, rootc,rootd, 
                     kstemmax, stemc, stemd,
                     kleafmax, leafc, leafd)
krmax[2] = hydraulics_findRhizosphereMaximumConductance(15, 
                      s$VG_n[2],s$VG_alpha[2],
                      krootmax, rootc,rootd, 
                      kstemmax, stemc, stemd,
                      kleafmax, leafc, leafd)
krmax[3] = hydraulics_findRhizosphereMaximumConductance(15, 
                      s$VG_n[3],s$VG_alpha[3],
                      krootmax, rootc,rootd, 
                      kstemmax, stemc, stemd,
                      kleafmax, leafc, leafd)
krmax

@
The values are the same because the texture of the three layers is the same in this case. If we take into account root distribution, actual maximum rhizosphere conductance values are:
<<>>=
krmax*v1
@

\subsection{Plant water compartments}
\subsubsection{Pressure-volume curves}

Parameters of the pressure-volume curve (i.e. $\pi_{0,stem}$ and $\epsilon_{stem}$) for leaf and stem symplastic tissue are required for each species. When parameters for stem tissue are missing, \texttt{medfate} estimates them from wood density following Christophersen et al (2016):
\begin{equation}
\pi_{0,stem} = 0.52 - 4.16 \cdot \rho_{wood}
\end{equation}

\begin{equation}
\epsilon_{stem} = \sqrt{1.02 \cdot e^{8.5\cdot \rho_{wood}}-2.89}
\end{equation}

\subsubsection{Plant water storage capacity}
The water storage capacity of sapwood tissue per leaf area unit ($V_{sapwood}$; in m$^3$·m$^{-2}$) can be estimated as the product of stem height ($H$ in m) and Huber value ($H_v$; ratio of sapwood area to leaf area in m$^2$·m$^{-2}$) times a factor to account for the non-cylindrical shape (http://www.fao.org/forestry/17109/en/):
\begin{equation}
V_{sapwood} = 0.48 \cdot H \cdot H_v \cdot \Theta_{sapwood}
\end{equation}
$\Theta_{sapwood}$ is sapwood porosity (cm$^3$ of water per cm$^3$ of sapwood tissue), which can be estimated from wood density ($\rho_{wood}$; in g·cm$^{-3}$):
\begin{equation}
\Theta_{sapwood} = 1 - (\rho_{wood} / 1.54)
\end{equation}
where the density of wood substance can be assumed to be fixed and equal to 1.54 g·cm$^{-3}$ (Dunlap 1914). For example, wood densities ranging from 0.443 to 1.000 g·cm$^{-3}$ result in sapwood porosity values between 0.35 and 0.71. 

Water storage capacity of leaf tissue per leaf area unit ($V_{leaf}$; in m$^3$·m$^{-2}$) can be estimated as the product of specific leaf area (SLA; in m$^2$·kg$^{-1}$) and leaf density ($\rho_{leaf}$; in g·cm$^{-3}$):
\begin{equation}
V_{leaf} = \frac{10^{-3}}{SLA \cdot \rho_{leaf}} \cdot \Theta_{leaf}
\end{equation}
$\Theta_{leaf}$ is leaf porosity (cm$^3$ of water per cm$^3$ of leaf tissue), which can be estimated from leaf density:
\begin{equation}
\Theta_{leaf} = 1 - (\rho_{leaf} / 1.54)
\end{equation}
where the density of wood substance can be assumed to be fixed and equal to 1.54 g·cm$^{-3}$ (Dunlap 1914). 

For example, let's calculate the stem and leaf water capacity for a Q. ilex tree of 15 m height:
<<>>==
wd = 1.0
Al2As = 2512 
H = 1500 # 15 m
hydraulics_stemWaterCapacity(Al2As, H, wd)

ld = 0.7
SLA = 5.870 
hydraulics_leafWaterCapacity(SLA, ld)
@ 


\subsection{Stomatal regulation and photosynthesis}
\subsubsection{Stomatal conductance}
Maximum stomatal conductance ($g_{swmax}$) is an input parameter for each species. When species-specific values are missing, the following relation with maximum leaf hydraulic conductance ($k_{l, max}$) is used (Mencuccini 2003):
\begin{equation}
g_{swmax} = e^{4.797 + 0.633\cdot \log(k_{l, max})}
\end{equation}

Species values for $g_{swmin}$ were taken from Duursma et al. (2018). Following the same authors, a value of $g_{swmin}$ = 0.0045 mol H$_2$O·s$^{-1}$·m$^{-2}$ is taken as default, when species-specific values are missing.

\subsubsection{Photosynthesis}

Rubisco's maximum carboxylation rate at 25ºC ($V_{max, 298}$, in $\mu$mol CO$_2$·s$^{-1}$·m$^{-2}$) is a required input parameter for each species (\texttt{Vmax298}), and if its value is missing a default value of 100 $\mu$mol CO$_2$·s$^{-1}$·m$^{-2}$ is used. The maximum rate of electron transport at the same temperature ($J_{max, 298}$) can be provided by the user (\texttt{Jmax298}) but, if not, it is estimated from $V_{max, 298}$ using (Walker et al. 2014):

\begin{equation}
J_{max, 298} = e^{1.197 + 0.847\cdot \log(V_{max,298})}
\end{equation}




\section{References}
\begin{itemize}
\item{Bartlett, M.K., Scoffoni, C., & Sack, L. 2012. The determinants of leaf turgor loss point and prediction of drought tolerance of species and biomes: a global meta-analysis. Ecology Letters 15: 393–405.}
\item{Bernacchi, C. J., E. L. Singsaas, C. Pimentel, A. R. Portis, and S. P. Long. 2001. Improved temperature response functions for models of Rubisco-limited photosynthesis. Plant, Cell and Environment 24:253–259.}
\item{Campbell, G. S., and J. M. Norman. 1998. An introduction to environmental biophysics. 2nd edition.}
\item{Christoffersen, B.O., Gloor, M., Fauset, S., Fyllas, N.M., Galbraith, D.R., Baker, T.R., Rowland, L., Fisher, R.A., Binks, O.J., Sevanto, S.A., Xu, C., Jansen, S., Choat, B., Mencuccini, M., McDowell, N.G., & Meir, P. 2016. Linking hydraulic traits to tropical forest function in a size-structured and trait-driven model (TFS v.1-Hydro). Geoscientific Model Development Discussions 0: 1–60.}
\item{Collatz, G. J., J. T. Ball, C. Grivet, and J. A. Berry. 1991. Physiological and environmental regulation of stomatal conductance, photosynthesis and transpiration: a model that includes a laminar boundary layer. Agricultural and Forest Meteorology 54:107–136.}
\item{De Pury, D.G.G. and Farquhar, G.D. 1997. Simple scaling of photosynthesis from leaves to canopies without the errors of big-leaf models. Plant, Cell and Environment, 20, 537–557.}
\item{Dunlap F (1914) Density of wood substance and porosity of wood. J Agric Res II(6):423–428.}
\item{Duursma RA, Blackman CJ, Lopéz R, et al (2018) On the minimum leaf conductance: its role in models of plant water use, and ecological and environmental controls. New Phytol. doi: 10.1111/nph.15395}
\item{Fisher, R.A., Williams, M., Do Vale, L.R., Da Costa, A.L., Meir, P. 2006. Evidence from Amazonian forests is consistent with a model of isohydric control of leaf water potential. Plant, Cell and Environment 29: 151–165.}
\item{Hölttä, T., Cochard, H., Nikinmaa, E., Mencuccini, M. 2009. Capacitive effect of cavitation in xylem conduits: Results from a dynamic model. Plant, Cell and Environment 32: 10–21.}
\item{Medlyn, B. E., E. Dreyer, D. Ellsworth, M. Forstreuter, P. C. Harley, M. U. F. Kirschbaum, X. Le Roux, P. Montpied, J. Strassemeyer, A. Walcroft, K. Wang, and D. Loustau. 2002. Temperature response of parameters of a biochemically based model of photosynthesis. II. A review of experimental data. Plant, Cell and Environment 25:1167–1179.}
\item{Magnani, F., Mencuccini, M.,  Grace, J. 2000. Age-related decline in stand productivity: The role of structural acclimation under hydraulic constraints. Plant, Cell and Environment 23: 251–263.}
\item{Martin-StPaul, N., Delzon, S.,  Cochard, H. 2017. Plant resistance to drought depends on timely stomatal closure. Ecology Letters 20: 1437–1447.}
\item{Mencuccini M (2003) The ecological significance of long-distance water transport : short-term regulation , long-term acclimation and the hydraulic costs of stature across plant life forms. Plant Cell Environ 26:163–182.}
\item{Olson, M.E., Anfodillo, T., Rosell, J.A., Petit, G., Crivellaro, A., Isnard, S., León-Gómez, C., Alvarado-Cárdenas, L.O.,  Castorena, M. 2014. Universal hydraulics of the flowering plants: Vessel diameter scales with stem length across angiosperm lineages, habits and climates. Ecology Letters 17: 988–997.}
\item{Sack, L.,  Holbrook, N.M. 2006. Leaf Hydraulics. Annual Review of Plant Biology 57: 361–381.}
\item{Sperry, J. S., F. R. Adler, G. S. Campbell, and J. P. Comstock. 1998. Limitation of plant water use by rhizosphere and xylem conductance: results from a model. Plant, Cell \& Environment 21:347–359.}
\item{Sperry, J. S., and D. M. Love. 2015. What plant hydraulics can tell us about responses to climate-change droughts. New Phytologist 207:14–27.}
\item{Sperry, J. S., Y. Wang, B. T. Wolfe, D. S. Mackay, W. R. L. Anderegg, N. G. McDowell, and W. T. Pockman. 2016a. Pragmatic hydraulic theory predicts stomatal responses to climatic water deficits. New Phytologist 212:577–589.}
\item{Sperry, J. S., M. D. Venturas, W. R. L. Anderegg, M. Mencuccini, D. S. Mackay, Y. Wang, and D. M. Love. 2016b. Predicting stomatal responses to the environment from the optimization of photosynthetic gain and hydraulic cost. Plant Cell and Environment.}
\item{Steppe K, Lemeur R, Vanrolleghem A. 2005. A mathematical model linking tree sap flow dynamics to dialy stem diameter fluctuation and radial stem growth. Tree Physiol 26:257–273}
\item{Tyree, M.T., Yang, S. 1990. Water-storage capacity of Thuja, Tsuga and Acer stems measured by dehydration isotherms - The contribution of capillary water and cavitation. Planta 182: 420–426.}
\item{Van Lier QDJ, Neto DD, Metselaar K (2009) Modeling of transpiration reduction in van genuchten-mualem type soils. Water Resour Res 45:1–9. doi: 10.1029/2008WR006938}
\item{Walker AP, Beckerman AP, Gu L, et al (2014) The relationship of leaf photosynthetic traits - Vcmax and Jmax - to leaf nitrogen, leaf phosphorus, and specific leaf area: A meta-analysis and modeling study. Ecol Evol 4:3218–3235. doi: 10.1002/ece3.1173}
\end{itemize}
\end{document}